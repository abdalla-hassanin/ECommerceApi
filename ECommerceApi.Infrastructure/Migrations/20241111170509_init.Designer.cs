// <auto-generated />
using System;
using ECommerceApi.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerceApi.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241111170509_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerceApi.Data.Entities.Address", b =>
                {
                    b.Property<string>("AddressId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("AddressLine")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("AddressId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Admin", b =>
                {
                    b.Property<string>("AdminId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AdminId");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ParentCategoryId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2343),
                            Description = "أشهر الأطباق المصرية التقليدية والشعبية",
                            ImageUrl = "https://foodimages.store/egyptian/traditional.jpg",
                            IsActive = true,
                            Name = "مأكولات مصرية تقليدية",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2345)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXP2MAWB3DQXS5QNZEI",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2384),
                            Description = "تشكيلة متنوعة من المشويات المصرية",
                            ImageUrl = "https://foodimages.store/grilled/meats.jpg",
                            IsActive = true,
                            Name = "مشويات",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2385)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXP3MAWB3DQXS5QNZEJ",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2403),
                            Description = "حلويات مصرية تقليدية وعربية",
                            ImageUrl = "https://foodimages.store/sweets/oriental.jpg",
                            IsActive = true,
                            Name = "حلويات شرقية",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2404)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXP4MAWB3DQXS5QNZEK",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2422),
                            Description = "الخبز والمعجنات المصرية",
                            ImageUrl = "https://foodimages.store/bakery/bread.jpg",
                            IsActive = true,
                            Name = "مخبوزات",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2424)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXP5MAWB3DQXS5QNZEL",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2442),
                            Description = "أطباق السمك والمأكولات البحرية",
                            ImageUrl = "https://foodimages.store/seafood/fish.jpg",
                            IsActive = true,
                            Name = "مأكولات بحرية",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2443)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXP6MAWB3DQXS5QNZEM",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2475),
                            Description = "أطباق الفطور المصرية التقليدية",
                            ImageUrl = "https://foodimages.store/breakfast/traditional.jpg",
                            IsActive = true,
                            Name = "وجبات فطور",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2476)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXP7MAWB3DQXS5QNZEN",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2494),
                            Description = "المقبلات والسلطات المصرية",
                            ImageUrl = "https://foodimages.store/appetizers/salads.jpg",
                            IsActive = true,
                            Name = "مقبلات",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2495)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXP8MAWB3DQXS5QNZEO",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2513),
                            Description = "أنواع الحساء والشوربة المصرية",
                            ImageUrl = "https://foodimages.store/soups/traditional.jpg",
                            IsActive = true,
                            Name = "حساء وشوربة",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2514)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXP9MAWB3DQXS5QNZEP",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2661),
                            Description = "تشكيلة متنوعة من أطباق الأرز",
                            ImageUrl = "https://foodimages.store/rice/dishes.jpg",
                            IsActive = true,
                            Name = "أطباق الأرز",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2662)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXPAMAWB3DQXS5QNZEQ",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2681),
                            Description = "أطباق المكرونة والعجائن المصرية",
                            ImageUrl = "https://foodimages.store/pasta/dishes.jpg",
                            IsActive = true,
                            Name = "مكرونة وعجائن",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2683)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXPBMAWB3DQXS5QNZER",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2699),
                            Description = "أطباق الخضروات والبقوليات المصرية",
                            ImageUrl = "https://foodimages.store/vegetables/legumes.jpg",
                            IsActive = true,
                            Name = "خضروات وبقوليات",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2700)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXPCMAWB3DQXS5QNZES",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2718),
                            Description = "المشروبات الساخنة التقليدية",
                            ImageUrl = "https://foodimages.store/beverages/hot.jpg",
                            IsActive = true,
                            Name = "مشروبات ساخنة",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2719)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXPDMAWB3DQXS5QNZET",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2736),
                            Description = "العصائر الطبيعية والمشروبات الباردة",
                            ImageUrl = "https://foodimages.store/beverages/juices.jpg",
                            IsActive = true,
                            Name = "عصائر طبيعية",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2737)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXPEMAWB3DQXS5QNZEU",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2755),
                            Description = "تشكيلة متنوعة من أطباق الدجاج",
                            ImageUrl = "https://foodimages.store/chicken/dishes.jpg",
                            IsActive = true,
                            Name = "أطباق الدجاج",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2756)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXPFMAWB3DQXS5QNZEV",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2780),
                            Description = "أطباق اللحوم المصرية المتنوعة",
                            ImageUrl = "https://foodimages.store/meat/dishes.jpg",
                            IsActive = true,
                            Name = "أطباق اللحوم",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2781)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXPGMAWB3DQXS5QNZEW",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2799),
                            Description = "أطباق نباتية مصرية صحية",
                            ImageUrl = "https://foodimages.store/vegetarian/dishes.jpg",
                            IsActive = true,
                            Name = "وجبات نباتية",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2800)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXPHMAWB3DQXS5QNZEX",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2816),
                            Description = "المخللات المصرية التقليدية",
                            ImageUrl = "https://foodimages.store/pickles/traditional.jpg",
                            IsActive = true,
                            Name = "مخللات",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2818)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXPIMAWB3DQXS5QNZEY",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2835),
                            Description = "التوابل والبهارات المصرية",
                            ImageUrl = "https://foodimages.store/spices/traditional.jpg",
                            IsActive = true,
                            Name = "توابل وبهارات",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2836)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXPJMAWB3DQXS5QNZEZ",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2853),
                            Description = "الصلصات والمقبلات المصرية",
                            ImageUrl = "https://foodimages.store/sauces/dips.jpg",
                            IsActive = true,
                            Name = "صلصات ومقبلات",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2854)
                        },
                        new
                        {
                            CategoryId = "01HQ5RZJXPKMAWB3DQXS5QNZF0",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2871),
                            Description = "الوجبات السريعة المصرية",
                            ImageUrl = "https://foodimages.store/fastfood/egyptian.jpg",
                            IsActive = true,
                            Name = "وجبات سريعة",
                            ParentCategoryId = "01HQ5RZJXP1MAWB3DQXS5QNZEH",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 635, DateTimeKind.Utc).AddTicks(2872)
                        });
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Coupon", b =>
                {
                    b.Property<string>("CouponId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DiscountType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MinimumPurchase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsageCount")
                        .HasColumnType("int");

                    b.Property<int?>("UsageLimit")
                        .HasColumnType("int");

                    b.HasKey("CouponId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("Bio")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Language")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("LastPurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProfilePictureUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CustomerId");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("CouponId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShippingAddressId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("ShippingMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("CouponId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ShippingAddressId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.OrderItem", b =>
                {
                    b.Property<string>("OrderItemId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VariantId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("VariantId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Payment", b =>
                {
                    b.Property<string>("PaymentId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StripeClientSecret")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StripePaymentIntentId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<decimal?>("CompareAtPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = "01HQ6BZJXP1MAWB3DQXS5QNZE1",
                            CompareAtPrice = 40.00m,
                            CostPrice = 20.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(5874),
                            Description = "كشري مصري تقليدي مكون من عدس وأرز ومكرونة وصلصة طماطم حارة",
                            Name = "كشري مصري تقليدي",
                            Price = 35.00m,
                            ShortDescription = "طبق مصري شعبي مميز",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(5875)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP2MAWB3DQXS5QNZE2",
                            CompareAtPrice = 75.00m,
                            CostPrice = 40.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(5898),
                            Description = "ملوخية خضراء طازجة مع قطع دجاج مشوي وأرز",
                            Name = "ملوخية بالفراخ",
                            Price = 65.00m,
                            ShortDescription = "طبق مصري عائلي مميز",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(5900)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP3MAWB3DQXS5QNZE3",
                            CompareAtPrice = 18.00m,
                            CostPrice = 8.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(5919),
                            Description = "فول مدمس بزيت الزيتون والكمون والليمون",
                            Name = "فول مدمس",
                            Price = 15.00m,
                            ShortDescription = "فطار مصري تقليدي",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(5920)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP4MAWB3DQXS5QNZE4",
                            CompareAtPrice = 200.00m,
                            CostPrice = 120.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(5940),
                            Description = "تشكيلة من اللحوم المشوية تشمل كفتة وريش وشيش طاووق",
                            Name = "مشويات مشكلة",
                            Price = 180.00m,
                            ShortDescription = "مشويات مصرية فاخرة",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(5941)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP5MAWB3DQXS5QNZE5",
                            CompareAtPrice = 50.00m,
                            CostPrice = 25.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(5959),
                            Description = "كنافة محشوة بالقشطة والمكسرات",
                            Name = "كنافة نابلسية",
                            Price = 45.00m,
                            ShortDescription = "حلوى شرقية شهية",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(5961)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP6MAWB3DQXS5QNZE6",
                            CompareAtPrice = 2.50m,
                            CostPrice = 1.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(5981),
                            Description = "خبز بلدي طازج مصنوع يومياً",
                            Name = "عيش بلدي",
                            Price = 2.00m,
                            ShortDescription = "خبز مصري تقليدي",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(5982)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP7MAWB3DQXS5QNZE7",
                            CompareAtPrice = 180.00m,
                            CostPrice = 100.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6003),
                            Description = "سمك قاروص طازج مشوي مع الخضروات والصلصة",
                            Name = "سمك قاروص مشوي",
                            Price = 160.00m,
                            ShortDescription = "سمك طازج مشوي",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6004)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP8MAWB3DQXS5QNZE8",
                            CompareAtPrice = 95.00m,
                            CostPrice = 55.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6023),
                            Description = "فتة مصرية باللحم البتلو والخل والثوم",
                            Name = "فتة باللحمة",
                            Price = 85.00m,
                            ShortDescription = "طبق مصري تقليدي",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6024)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP9MAWB3DQXS5QNZE9",
                            CompareAtPrice = 30.00m,
                            CostPrice = 15.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6042),
                            Description = "متبل باذنجان مشوي بالطحينة والثوم",
                            Name = "بابا غنوج",
                            Price = 25.00m,
                            ShortDescription = "مقبلات شرقية",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6044)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPAMAWB3DQXS5QNZF1",
                            CompareAtPrice = 25.00m,
                            CostPrice = 10.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6161),
                            Description = "شوربة عدس مصرية بالكمون والليمون",
                            Name = "شوربة عدس",
                            Price = 20.00m,
                            ShortDescription = "شوربة مصرية تقليدية",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6163)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPBMAWB3DQXS5QNZF2",
                            CompareAtPrice = 50.00m,
                            CostPrice = 25.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6184),
                            Description = "أرز صيادية بالسمك والمكسرات",
                            Name = "أرز صيادية",
                            Price = 45.00m,
                            ShortDescription = "أرز بالسمك على الطريقة المصرية",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6185)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPCMAWB3DQXS5QNZF3",
                            CompareAtPrice = 80.00m,
                            CostPrice = 45.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6205),
                            Description = "مكرونة بالجمبري والصلصة البيضاء",
                            Name = "مكرونة إسكندراني",
                            Price = 70.00m,
                            ShortDescription = "باستا على الطريقة الإسكندرانية",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6207)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPDMAWB3DQXS5QNZF4",
                            CompareAtPrice = 7.00m,
                            CostPrice = 2.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6226),
                            Description = "شاي مصري أسود مع النعناع الطازج",
                            Name = "شاي مصري",
                            Price = 5.00m,
                            ShortDescription = "مشروب مصري تقليدي",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6227)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPEMAWB3DQXS5QNZF5",
                            CompareAtPrice = 12.00m,
                            CostPrice = 5.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6246),
                            Description = "عصير قصب طازج",
                            Name = "عصير قصب",
                            Price = 10.00m,
                            ShortDescription = "مشروب مصري منعش",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6247)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPFMAWB3DQXS5QNZF6",
                            CompareAtPrice = 100.00m,
                            CostPrice = 60.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6275),
                            Description = "فراخ مشوية متبلة بالتوابل المصرية",
                            Name = "فراخ مشوية",
                            Price = 90.00m,
                            ShortDescription = "دجاج مشوي على الفحم",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6276)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPGMAWB3DQXS5QNZF7",
                            CompareAtPrice = 95.00m,
                            CostPrice = 55.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6367),
                            Description = "كفتة لحم مشوية مع البهارات المصرية",
                            Name = "كفتة مشوية",
                            Price = 85.00m,
                            ShortDescription = "لحم مفروم مشوي",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6369)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPHMAWB3DQXS5QNZF8",
                            CompareAtPrice = 18.00m,
                            CostPrice = 8.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6515),
                            Description = "تشكيلة من المخللات المصرية",
                            Name = "مخلل مشكل",
                            Price = 15.00m,
                            ShortDescription = "مخللات مصرية متنوعة",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6517)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPIMAWB3DQXS5QNZF9",
                            CompareAtPrice = 30.00m,
                            CostPrice = 12.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6533),
                            Description = "خلطة بهارات مصرية تقليدية",
                            Name = "دقة مصرية",
                            Price = 25.00m,
                            ShortDescription = "توابل مصرية",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6534)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPJMAWB3DQXS5QNZG1",
                            CompareAtPrice = 25.00m,
                            CostPrice = 10.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6550),
                            Description = "طحينة مصرية مع الليمون والثوم",
                            Name = "صلصة طحينة",
                            Price = 20.00m,
                            ShortDescription = "صلصة مصرية تقليدية",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6552)
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPKMAWB3DQXS5QNZG2",
                            CompareAtPrice = 45.00m,
                            CostPrice = 25.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6568),
                            Description = "حواوشي باللحم المفروم والتوابل",
                            Name = "حواوشي",
                            Price = 40.00m,
                            ShortDescription = "ساندوتش مصري شهير",
                            Status = "Active",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 639, DateTimeKind.Utc).AddTicks(6570)
                        });
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.ProductCategory", b =>
                {
                    b.Property<string>("ProductId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("CategoryId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductId = "01HQ6BZJXP1MAWB3DQXS5QNZE1",
                            CategoryId = "01HQ5RZJXP9MAWB3DQXS5QNZEP"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP1MAWB3DQXS5QNZE1",
                            CategoryId = "01HQ5RZJXPAMAWB3DQXS5QNZEQ"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP2MAWB3DQXS5QNZE2",
                            CategoryId = "01HQ5RZJXPBMAWB3DQXS5QNZER"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP2MAWB3DQXS5QNZE2",
                            CategoryId = "01HQ5RZJXPEMAWB3DQXS5QNZEU"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP3MAWB3DQXS5QNZE3",
                            CategoryId = "01HQ5RZJXP6MAWB3DQXS5QNZEM"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP3MAWB3DQXS5QNZE3",
                            CategoryId = "01HQ5RZJXPBMAWB3DQXS5QNZER"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP4MAWB3DQXS5QNZE4",
                            CategoryId = "01HQ5RZJXP2MAWB3DQXS5QNZEI"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP4MAWB3DQXS5QNZE4",
                            CategoryId = "01HQ5RZJXPFMAWB3DQXS5QNZEV"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP5MAWB3DQXS5QNZE5",
                            CategoryId = "01HQ5RZJXP3MAWB3DQXS5QNZEJ"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP6MAWB3DQXS5QNZE6",
                            CategoryId = "01HQ5RZJXP4MAWB3DQXS5QNZEK"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP7MAWB3DQXS5QNZE7",
                            CategoryId = "01HQ5RZJXP5MAWB3DQXS5QNZEL"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP7MAWB3DQXS5QNZE7",
                            CategoryId = "01HQ5RZJXP2MAWB3DQXS5QNZEI"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP8MAWB3DQXS5QNZE8",
                            CategoryId = "01HQ5RZJXPFMAWB3DQXS5QNZEV"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP9MAWB3DQXS5QNZE9",
                            CategoryId = "01HQ5RZJXP7MAWB3DQXS5QNZEN"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXP9MAWB3DQXS5QNZE9",
                            CategoryId = "01HQ5RZJXPGMAWB3DQXS5QNZEW"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPAMAWB3DQXS5QNZF1",
                            CategoryId = "01HQ5RZJXP8MAWB3DQXS5QNZEO"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPAMAWB3DQXS5QNZF1",
                            CategoryId = "01HQ5RZJXPGMAWB3DQXS5QNZEW"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPBMAWB3DQXS5QNZF2",
                            CategoryId = "01HQ5RZJXP9MAWB3DQXS5QNZEP"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPBMAWB3DQXS5QNZF2",
                            CategoryId = "01HQ5RZJXP5MAWB3DQXS5QNZEL"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPCMAWB3DQXS5QNZF3",
                            CategoryId = "01HQ5RZJXPAMAWB3DQXS5QNZEQ"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPCMAWB3DQXS5QNZF3",
                            CategoryId = "01HQ5RZJXP5MAWB3DQXS5QNZEL"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPDMAWB3DQXS5QNZF4",
                            CategoryId = "01HQ5RZJXPCMAWB3DQXS5QNZES"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPEMAWB3DQXS5QNZF5",
                            CategoryId = "01HQ5RZJXPDMAWB3DQXS5QNZET"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPFMAWB3DQXS5QNZF6",
                            CategoryId = "01HQ5RZJXPEMAWB3DQXS5QNZEU"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPFMAWB3DQXS5QNZF6",
                            CategoryId = "01HQ5RZJXP2MAWB3DQXS5QNZEI"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPGMAWB3DQXS5QNZF7",
                            CategoryId = "01HQ5RZJXPFMAWB3DQXS5QNZEV"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPGMAWB3DQXS5QNZF7",
                            CategoryId = "01HQ5RZJXP2MAWB3DQXS5QNZEI"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPHMAWB3DQXS5QNZF8",
                            CategoryId = "01HQ5RZJXPHMAWB3DQXS5QNZEX"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPIMAWB3DQXS5QNZF9",
                            CategoryId = "01HQ5RZJXPIMAWB3DQXS5QNZEY"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPJMAWB3DQXS5QNZG1",
                            CategoryId = "01HQ5RZJXPJMAWB3DQXS5QNZEZ"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPKMAWB3DQXS5QNZG2",
                            CategoryId = "01HQ5RZJXPKMAWB3DQXS5QNZF0"
                        },
                        new
                        {
                            ProductId = "01HQ6BZJXPKMAWB3DQXS5QNZG2",
                            CategoryId = "01HQ5RZJXPFMAWB3DQXS5QNZEV"
                        });
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.ProductImage", b =>
                {
                    b.Property<string>("ImageId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("AltText")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VariantId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductId");

                    b.HasIndex("VariantId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            ImageId = "01HQ7BZJXP1MAWB3DQXS5QNZ01",
                            AltText = "كشري مصري تقليدي",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3819),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/koshary/main.jpg",
                            ProductId = "01HQ6BZJXP1MAWB3DQXS5QNZE1",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3820)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXP2MAWB3DQXS5QNZ02",
                            AltText = "مكونات الكشري المصري",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3840),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/koshary/alt.jpg",
                            ProductId = "01HQ6BZJXP1MAWB3DQXS5QNZE1",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3842)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXP3MAWB3DQXS5QNZ03",
                            AltText = "ملوخية بالفراخ",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3858),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/molokhia/main.jpg",
                            ProductId = "01HQ6BZJXP2MAWB3DQXS5QNZE2",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3860)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXP4MAWB3DQXS5QNZ04",
                            AltText = "طبق ملوخية مع الأرز",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3876),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/molokhia/alt.jpg",
                            ProductId = "01HQ6BZJXP2MAWB3DQXS5QNZE2",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3877)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXP5MAWB3DQXS5QNZ05",
                            AltText = "فول مدمس مصري",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3893),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/ful/main.jpg",
                            ProductId = "01HQ6BZJXP3MAWB3DQXS5QNZE3",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3894)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXP6MAWB3DQXS5QNZ06",
                            AltText = "فول مدمس مع الزيت والليمون",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3911),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/ful/alt.jpg",
                            ProductId = "01HQ6BZJXP3MAWB3DQXS5QNZE3",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3912)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXP7MAWB3DQXS5QNZ07",
                            AltText = "مشويات مشكلة مصرية",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3928),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/mixedgrill/main.jpg",
                            ProductId = "01HQ6BZJXP4MAWB3DQXS5QNZE4",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3929)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXP8MAWB3DQXS5QNZ08",
                            AltText = "تشكيلة من اللحوم المشوية",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3945),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/mixedgrill/alt.jpg",
                            ProductId = "01HQ6BZJXP4MAWB3DQXS5QNZE4",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3946)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXP9MAWB3DQXS5QNZ09",
                            AltText = "كنافة نابلسية",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3962),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/kunafa/main.jpg",
                            ProductId = "01HQ6BZJXP5MAWB3DQXS5QNZE5",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3963)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPAMAWB3DQXS5QNZ10",
                            AltText = "كنافة بالقشطة والمكسرات",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3979),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/kunafa/alt.jpg",
                            ProductId = "01HQ6BZJXP5MAWB3DQXS5QNZE5",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3980)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPBMAWB3DQXS5QNZ11",
                            AltText = "عيش بلدي طازج",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3996),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/bread/baladi-main.jpg",
                            ProductId = "01HQ6BZJXP6MAWB3DQXS5QNZE6",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(3997)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPCMAWB3DQXS5QNZ12",
                            AltText = "عيش بلدي مقطع",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4013),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/bread/baladi-alt.jpg",
                            ProductId = "01HQ6BZJXP6MAWB3DQXS5QNZE6",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4014)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPDMAWB3DQXS5QNZ13",
                            AltText = "سمك قاروص مشوي",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4030),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/fish/seabass-main.jpg",
                            ProductId = "01HQ6BZJXP7MAWB3DQXS5QNZE7",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4031)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPEMAWB3DQXS5QNZ14",
                            AltText = "طبق سمك قاروص مع الخضار",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4047),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/fish/seabass-alt.jpg",
                            ProductId = "01HQ6BZJXP7MAWB3DQXS5QNZE7",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4048)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPFMAWB3DQXS5QNZ15",
                            AltText = "فتة باللحمة المصرية",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4064),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/fattah/meat-main.jpg",
                            ProductId = "01HQ6BZJXP8MAWB3DQXS5QNZE8",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4065)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPGMAWB3DQXS5QNZ16",
                            AltText = "فتة مع الخبز المحمص",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4081),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/fattah/meat-alt.jpg",
                            ProductId = "01HQ6BZJXP8MAWB3DQXS5QNZE8",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4082)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPHMAWB3DQXS5QNZ17",
                            AltText = "بابا غنوج",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4099),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/appetizers/babaganoush-main.jpg",
                            ProductId = "01HQ6BZJXP9MAWB3DQXS5QNZE9",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4100)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPIMAWB3DQXS5QNZ18",
                            AltText = "بابا غنوج مع الخبز",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4116),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/appetizers/babaganoush-alt.jpg",
                            ProductId = "01HQ6BZJXP9MAWB3DQXS5QNZE9",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4117)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPJMAWB3DQXS5QNZ19",
                            AltText = "شوربة عدس",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4134),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/soups/lentil-main.jpg",
                            ProductId = "01HQ6BZJXPAMAWB3DQXS5QNZF1",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4135)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPKMAWB3DQXS5QNZ20",
                            AltText = "شوربة عدس مع الليمون",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4151),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/soups/lentil-alt.jpg",
                            ProductId = "01HQ6BZJXPAMAWB3DQXS5QNZF1",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4153)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPLMAWB3DQXS5QNZ21",
                            AltText = "أرز صيادية",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4169),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/rice/sayadia-main.jpg",
                            ProductId = "01HQ6BZJXPBMAWB3DQXS5QNZF2",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4171)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPMMAWB3DQXS5QNZ22",
                            AltText = "أرز صيادية مع السمك",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4187),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/rice/sayadia-alt.jpg",
                            ProductId = "01HQ6BZJXPBMAWB3DQXS5QNZF2",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4189)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPNMAWB3DQXS5QNZ23",
                            AltText = "مكرونة إسكندراني",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4202),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/pasta/alexandria-main.jpg",
                            ProductId = "01HQ6BZJXPCMAWB3DQXS5QNZF3",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4203)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPOMAWB3DQXS5QNZ24",
                            AltText = "مكرونة إسكندراني بالجمبري",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4219),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/pasta/alexandria-alt.jpg",
                            ProductId = "01HQ6BZJXPCMAWB3DQXS5QNZF3",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4221)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPPMAWB3DQXS5QNZ25",
                            AltText = "شاي مصري",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4236),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/beverages/tea-main.jpg",
                            ProductId = "01HQ6BZJXPDMAWB3DQXS5QNZF4",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4237)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPQMAWB3DQXS5QNZ26",
                            AltText = "شاي مصري بالنعناع",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4253),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/beverages/tea-alt.jpg",
                            ProductId = "01HQ6BZJXPDMAWB3DQXS5QNZF4",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4255)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPRMAWB3DQXS5QNZ27",
                            AltText = "عصير قصب طازج",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4270),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/beverages/sugarcane-main.jpg",
                            ProductId = "01HQ6BZJXPEMAWB3DQXS5QNZF5",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4272)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPSMAWB3DQXS5QNZ28",
                            AltText = "عصير قصب في كوب",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4288),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/beverages/sugarcane-alt.jpg",
                            ProductId = "01HQ6BZJXPEMAWB3DQXS5QNZF5",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4290)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPTMAWB3DQXS5QNZ29",
                            AltText = "فراخ مشوية",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4446),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/chicken/grilled-main.jpg",
                            ProductId = "01HQ6BZJXPFMAWB3DQXS5QNZF6",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4448)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPUMAWB3DQXS5QNZ30",
                            AltText = "فراخ مشوية مع الأرز",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4464),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/chicken/grilled-alt.jpg",
                            ProductId = "01HQ6BZJXPFMAWB3DQXS5QNZF6",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4465)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPVMAWB3DQXS5QNZ31",
                            AltText = "كفتة مشوية",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4480),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/meat/kofta-main.jpg",
                            ProductId = "01HQ6BZJXPGMAWB3DQXS5QNZF7",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4482)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPWMAWB3DQXS5QNZ32",
                            AltText = "كفتة مشوية مع السلطة",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4498),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/meat/kofta-alt.jpg",
                            ProductId = "01HQ6BZJXPGMAWB3DQXS5QNZF7",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4500)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPXMAWB3DQXS5QNZ33",
                            AltText = "مخلل مشكل",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4515),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/pickles/mixed-main.jpg",
                            ProductId = "01HQ6BZJXPHMAWB3DQXS5QNZF8",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4517)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPYMAWB3DQXS5QNZ34",
                            AltText = "تشكيلة مخللات",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4532),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/pickles/mixed-alt.jpg",
                            ProductId = "01HQ6BZJXPHMAWB3DQXS5QNZF8",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4534)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXPZMAWB3DQXS5QNZ35",
                            AltText = "دقة مصرية",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4553),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/spices/mix-main.jpg",
                            ProductId = "01HQ6BZJXPIMAWB3DQXS5QNZF9",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4554)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXP0MAWB3DQXS5QNZ36",
                            AltText = "توابل مصرية",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4569),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/spices/mix-alt.jpg",
                            ProductId = "01HQ6BZJXPIMAWB3DQXS5QNZF9",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4571)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXP1NAWB3DQXS5QNZ37",
                            AltText = "صلصة طحينة",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4587),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/sauces/tahini-main.jpg",
                            ProductId = "01HQ6BZJXPJMAWB3DQXS5QNZG1",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4588)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXP2NAWB3DQXS5QNZ38",
                            AltText = "طحينة مع السلطة",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4605),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/sauces/tahini-alt.jpg",
                            ProductId = "01HQ6BZJXPJMAWB3DQXS5QNZG1",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4606)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXP3NAWB3DQXS5QNZ39",
                            AltText = "حواوشي مصري",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4622),
                            DisplayOrder = 1,
                            ImageUrl = "https://foodimages.store/fastfood/hawawshi-main.jpg",
                            ProductId = "01HQ6BZJXPKMAWB3DQXS5QNZG2",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4623)
                        },
                        new
                        {
                            ImageId = "01HQ7BZJXP4NAWB3DQXS5QNZ40",
                            AltText = "حواوشي مع السلطة",
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4639),
                            DisplayOrder = 2,
                            ImageUrl = "https://foodimages.store/fastfood/hawawshi-alt.jpg",
                            ProductId = "01HQ6BZJXPKMAWB3DQXS5QNZG2",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 656, DateTimeKind.Utc).AddTicks(4640)
                        });
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.ProductVariant", b =>
                {
                    b.Property<string>("VariantId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<decimal?>("CompareAtPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("InventoryQuantity")
                        .HasColumnType("int");

                    b.Property<int>("LowStockThreshold")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("WeightUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("VariantId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariants");

                    b.HasData(
                        new
                        {
                            VariantId = "01HQ8BZJXP1MAWB3DQXS5QNZ01",
                            CompareAtPrice = 30.00m,
                            CostPrice = 15.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(826),
                            InventoryQuantity = 100,
                            LowStockThreshold = 20,
                            Name = "كشري صغير",
                            Price = 25.00m,
                            ProductId = "01HQ6BZJXP1MAWB3DQXS5QNZE1",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(828),
                            Weight = 250m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXP2MAWB3DQXS5QNZ02",
                            CompareAtPrice = 40.00m,
                            CostPrice = 20.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(852),
                            InventoryQuantity = 100,
                            LowStockThreshold = 20,
                            Name = "كشري متوسط",
                            Price = 35.00m,
                            ProductId = "01HQ6BZJXP1MAWB3DQXS5QNZE1",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(854),
                            Weight = 350m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXP3MAWB3DQXS5QNZ03",
                            CompareAtPrice = 50.00m,
                            CostPrice = 25.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(875),
                            InventoryQuantity = 100,
                            LowStockThreshold = 20,
                            Name = "كشري كبير",
                            Price = 45.00m,
                            ProductId = "01HQ6BZJXP1MAWB3DQXS5QNZE1",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(876),
                            Weight = 500m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXP4MAWB3DQXS5QNZ04",
                            CompareAtPrice = 50.00m,
                            CostPrice = 25.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(899),
                            InventoryQuantity = 50,
                            LowStockThreshold = 10,
                            Name = "ملوخية بالفراخ - حصة صغيرة",
                            Price = 45.00m,
                            ProductId = "01HQ6BZJXP2MAWB3DQXS5QNZE2",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(901),
                            Weight = 300m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXP5MAWB3DQXS5QNZ05",
                            CompareAtPrice = 75.00m,
                            CostPrice = 40.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(922),
                            InventoryQuantity = 50,
                            LowStockThreshold = 10,
                            Name = "ملوخية بالفراخ - حصة متوسطة",
                            Price = 65.00m,
                            ProductId = "01HQ6BZJXP2MAWB3DQXS5QNZE2",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(924),
                            Weight = 500m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXP6MAWB3DQXS5QNZ06",
                            CompareAtPrice = 95.00m,
                            CostPrice = 55.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(947),
                            InventoryQuantity = 50,
                            LowStockThreshold = 10,
                            Name = "ملوخية بالفراخ - حصة كبيرة",
                            Price = 85.00m,
                            ProductId = "01HQ6BZJXP2MAWB3DQXS5QNZE2",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(949),
                            Weight = 700m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXP7MAWB3DQXS5QNZ07",
                            CompareAtPrice = 12.00m,
                            CostPrice = 5.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(970),
                            InventoryQuantity = 100,
                            LowStockThreshold = 20,
                            Name = "فول ساندويتش",
                            Price = 10.00m,
                            ProductId = "01HQ6BZJXP3MAWB3DQXS5QNZE3",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(971),
                            Weight = 200m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXP8MAWB3DQXS5QNZ08",
                            CompareAtPrice = 18.00m,
                            CostPrice = 8.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(992),
                            InventoryQuantity = 100,
                            LowStockThreshold = 20,
                            Name = "فول طبق",
                            Price = 15.00m,
                            ProductId = "01HQ6BZJXP3MAWB3DQXS5QNZE3",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(993),
                            Weight = 300m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXP9MAWB3DQXS5QNZ09",
                            CompareAtPrice = 140.00m,
                            CostPrice = 80.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1013),
                            InventoryQuantity = 30,
                            LowStockThreshold = 10,
                            Name = "مشويات مشكلة - حصة صغيرة",
                            Price = 120.00m,
                            ProductId = "01HQ6BZJXP4MAWB3DQXS5QNZE4",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1014),
                            Weight = 400m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXPAMAWB3DQXS5QNZ10",
                            CompareAtPrice = 200.00m,
                            CostPrice = 120.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1035),
                            InventoryQuantity = 30,
                            LowStockThreshold = 10,
                            Name = "مشويات مشكلة - حصة متوسطة",
                            Price = 180.00m,
                            ProductId = "01HQ6BZJXP4MAWB3DQXS5QNZE4",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1038),
                            Weight = 600m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXPBMAWB3DQXS5QNZ11",
                            CompareAtPrice = 260.00m,
                            CostPrice = 160.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1059),
                            InventoryQuantity = 30,
                            LowStockThreshold = 10,
                            Name = "مشويات مشكلة - حصة كبيرة",
                            Price = 240.00m,
                            ProductId = "01HQ6BZJXP4MAWB3DQXS5QNZE4",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1060),
                            Weight = 800m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXPCMAWB3DQXS5QNZ12",
                            CompareAtPrice = 30.00m,
                            CostPrice = 15.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1081),
                            InventoryQuantity = 50,
                            LowStockThreshold = 10,
                            Name = "كنافة - قطعة",
                            Price = 25.00m,
                            ProductId = "01HQ6BZJXP5MAWB3DQXS5QNZE5",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1082),
                            Weight = 150m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXPDMAWB3DQXS5QNZ13",
                            CompareAtPrice = 200.00m,
                            CostPrice = 120.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1103),
                            InventoryQuantity = 20,
                            LowStockThreshold = 5,
                            Name = "كنافة - علبة",
                            Price = 180.00m,
                            ProductId = "01HQ6BZJXP5MAWB3DQXS5QNZE5",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1105),
                            Weight = 1000m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXPEMAWB3DQXS5QNZ14",
                            CompareAtPrice = 120.00m,
                            CostPrice = 70.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1126),
                            InventoryQuantity = 30,
                            LowStockThreshold = 10,
                            Name = "قاروص مشوي - حصة صغيرة",
                            Price = 100.00m,
                            ProductId = "01HQ6BZJXP7MAWB3DQXS5QNZE7",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1127),
                            Weight = 250m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXPFMAWB3DQXS5QNZ15",
                            CompareAtPrice = 180.00m,
                            CostPrice = 100.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1150),
                            InventoryQuantity = 30,
                            LowStockThreshold = 10,
                            Name = "قاروص مشوي - حصة متوسطة",
                            Price = 160.00m,
                            ProductId = "01HQ6BZJXP7MAWB3DQXS5QNZE7",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1152),
                            Weight = 400m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXPGMAWB3DQXS5QNZ16",
                            CompareAtPrice = 240.00m,
                            CostPrice = 150.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1171),
                            InventoryQuantity = 30,
                            LowStockThreshold = 10,
                            Name = "قاروص مشوي - حصة كبيرة",
                            Price = 220.00m,
                            ProductId = "01HQ6BZJXP7MAWB3DQXS5QNZE7",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1173),
                            Weight = 600m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXPHMAWB3DQXS5QNZ17",
                            CompareAtPrice = 60.00m,
                            CostPrice = 30.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1193),
                            InventoryQuantity = 50,
                            LowStockThreshold = 10,
                            Name = "ربع فراخ - قطعة فاتحة",
                            Price = 50.00m,
                            ProductId = "01HQ6BZJXPFMAWB3DQXS5QNZF6",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1194),
                            Weight = 250m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXPIMAWB3DQXS5QNZ18",
                            CompareAtPrice = 65.00m,
                            CostPrice = 35.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1215),
                            InventoryQuantity = 50,
                            LowStockThreshold = 10,
                            Name = "ربع فراخ - قطعة داكنة",
                            Price = 55.00m,
                            ProductId = "01HQ6BZJXPFMAWB3DQXS5QNZF6",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1216),
                            Weight = 250m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXPJMAWB3DQXS5QNZ19",
                            CompareAtPrice = 100.00m,
                            CostPrice = 60.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1237),
                            InventoryQuantity = 30,
                            LowStockThreshold = 5,
                            Name = "دجاجة كاملة مشوية",
                            Price = 90.00m,
                            ProductId = "01HQ6BZJXPFMAWB3DQXS5QNZF6",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1238),
                            Weight = 1000m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXPKMAWB3DQXS5QNZ20",
                            CompareAtPrice = 95.00m,
                            CostPrice = 55.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1455),
                            InventoryQuantity = 50,
                            LowStockThreshold = 10,
                            Name = "كفتة طبق",
                            Price = 85.00m,
                            ProductId = "01HQ6BZJXPGMAWB3DQXS5QNZF7",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1457),
                            Weight = 300m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXPLMAWB3DQXS5QNZ21",
                            CompareAtPrice = 45.00m,
                            CostPrice = 25.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1479),
                            InventoryQuantity = 100,
                            LowStockThreshold = 20,
                            Name = "كفتة ساندويتش",
                            Price = 40.00m,
                            ProductId = "01HQ6BZJXPGMAWB3DQXS5QNZF7",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1480),
                            Weight = 200m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXPMMAWB3DQXS5QNZ22",
                            CompareAtPrice = 35.00m,
                            CostPrice = 20.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1502),
                            InventoryQuantity = 100,
                            LowStockThreshold = 20,
                            Name = "حواوشي صغير",
                            Price = 30.00m,
                            ProductId = "01HQ6BZJXPKMAWB3DQXS5QNZG2",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1503),
                            Weight = 200m,
                            WeightUnit = "جرام"
                        },
                        new
                        {
                            VariantId = "01HQ8BZJXPNMAWB3DQXS5QNZ23",
                            CompareAtPrice = 45.00m,
                            CostPrice = 25.00m,
                            CreatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1549),
                            InventoryQuantity = 100,
                            LowStockThreshold = 20,
                            Name = "حواوشي كبير",
                            Price = 40.00m,
                            ProductId = "01HQ6BZJXPKMAWB3DQXS5QNZG2",
                            UpdatedAt = new DateTime(2024, 11, 11, 17, 5, 7, 655, DateTimeKind.Utc).AddTicks(1551),
                            Weight = 300m,
                            WeightUnit = "جرام"
                        });
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Review", b =>
                {
                    b.Property<string>("ReviewId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("OrderId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ReviewId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Wishlist", b =>
                {
                    b.Property<string>("WishlistId")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.HasKey("WishlistId");

                    b.HasIndex("ProductId");

                    b.HasIndex("CustomerId", "ProductId")
                        .IsUnique();

                    b.ToTable("WishlistItems");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "01JCE2ZC2H0TQ51629JZP9PGMW",
                            ConcurrencyStamp = "01JCE2ZC2HH1S1696JKT831BGN",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "01JCE2ZC2HGQ6R5R8ZJ93724N9",
                            ConcurrencyStamp = "01JCE2ZC2H2BBKTERFKY8XGHSX",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(26)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(26)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Address", b =>
                {
                    b.HasOne("ECommerceApi.Data.Entities.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Admin", b =>
                {
                    b.HasOne("ECommerceApi.Data.Entities.ApplicationUser", "ApplicationUser")
                        .WithOne("Admin")
                        .HasForeignKey("ECommerceApi.Data.Entities.Admin", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Category", b =>
                {
                    b.HasOne("ECommerceApi.Data.Entities.Category", "ParentCategory")
                        .WithMany("Subcategories")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Customer", b =>
                {
                    b.HasOne("ECommerceApi.Data.Entities.ApplicationUser", "ApplicationUser")
                        .WithOne("Customer")
                        .HasForeignKey("ECommerceApi.Data.Entities.Customer", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Order", b =>
                {
                    b.HasOne("ECommerceApi.Data.Entities.Coupon", "Coupon")
                        .WithMany("Orders")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ECommerceApi.Data.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerceApi.Data.Entities.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("Customer");

                    b.Navigation("ShippingAddress");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.OrderItem", b =>
                {
                    b.HasOne("ECommerceApi.Data.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ECommerceApi.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ECommerceApi.Data.Entities.ProductVariant", "Variant")
                        .WithMany()
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Payment", b =>
                {
                    b.HasOne("ECommerceApi.Data.Entities.Order", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("ECommerceApi.Data.Entities.Payment", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.ProductCategory", b =>
                {
                    b.HasOne("ECommerceApi.Data.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerceApi.Data.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.ProductImage", b =>
                {
                    b.HasOne("ECommerceApi.Data.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ECommerceApi.Data.Entities.ProductVariant", "Variant")
                        .WithMany("Images")
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Product");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.ProductVariant", b =>
                {
                    b.HasOne("ECommerceApi.Data.Entities.Product", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Review", b =>
                {
                    b.HasOne("ECommerceApi.Data.Entities.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ECommerceApi.Data.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ECommerceApi.Data.Entities.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Wishlist", b =>
                {
                    b.HasOne("ECommerceApi.Data.Entities.Customer", "Customer")
                        .WithMany("WishlistItems")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerceApi.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ECommerceApi.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ECommerceApi.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerceApi.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ECommerceApi.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.ApplicationUser", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Category", b =>
                {
                    b.Navigation("ProductCategories");

                    b.Navigation("Subcategories");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Coupon", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("WishlistItems");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("ProductCategories");

                    b.Navigation("Reviews");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("ECommerceApi.Data.Entities.ProductVariant", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
